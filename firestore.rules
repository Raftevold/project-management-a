rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper Functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/admins/$(request.auth.token.email));
    }

    // Allow read access to admins collection for authentication
    match /admins/{email} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (
        !exists(/databases/$(database)/documents/admins/$(request.auth.token.email)) || 
        isAdmin()
      );
    }

    // Allow users to manage their own data
    match /users/{userId} {
      allow read, write: if isAuthenticated() && (
        request.auth.uid == userId || 
        isAdmin()
      );
    }

    // Allow read access to departments for authenticated users
    match /departments/{departmentId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Allow access to department roles
    match /departmentRoles/{userId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == userId || 
        isAdmin()
      );
      allow write: if isAdmin();
    }

    // Allow access to projects
    match /projects/{projectId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Allow audit log creation but restrict access
    match /auditLog/{logId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if false;
    }
  }
}
